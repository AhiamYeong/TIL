/* 값으로 보지 말고 자릿수로 보기 
 * 조건1 0으로 시작하지 않아야 함
 * 조건2 1이 2번 연속으로 나타나지 않아야 함
 * 부분 문자열에 11이 없다 1
 * */

import java.util.Scanner;

public class BOJ2193 {
	public static void main(String[] args) {
		// dp 테이블에 저장할 것: 경우의 수?
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt();
		int[] dp = new int[N+1];
		// 상태를 어떻게 - 1 11 111
		
		// 반드시 가능한 경우의 수: 1자릿수에서 1이 하나
		 
		// 이전 자리까지 보고 저장하기? 
		
		// i를 자릿수로 두고 ... i자리 이친수를 구하는 함수 
		
		// 1자리에서는 1, 2자리에서는 1
		dp[1] = 1;
		if (N >= 2) dp[2] = 1; 
		
		// 3번째 자리부터는 ...
		// 근데 2번째부터 봐도 상관없지 않나? 이진수니까 들어있는건 0/1 두개 뿐
		// 이전까지는 싹 없던거야......
		// i-2번째 자리는 무조건 1이구
		// i-1번째 자리가 0일 경우: 1,0 모두 가능 
		// i-1번째가 1일 경우: 0만 가능
		if (N >= 3) {
			for (int i = 3; i <= N; i++) {
				dp[i] = 
			}
		}
	}
}
